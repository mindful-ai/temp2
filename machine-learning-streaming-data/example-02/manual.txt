Predicting a binary target (e.g., fraudulent transaction)

Steps:

Set up a streaming data source using Kafka (or simulate it using a Python generator).
Stream data and preprocess it in real-time.
Incrementally train a model using partial updates with SGDClassifier

Requirements:

Apache Kafka for streaming (can be replaced with a simulated generator for simplicity).
Python libraries: confluent-kafka, scikit-learn, pandas, numpy.

Set Up Kafka

# Start Zookeeper
bin/zookeeper-server-start.sh config/zookeeper.properties

# Start Kafka
bin/kafka-server-start.sh config/server.properties

# Create topic
bin/kafka-topics.sh --create --topic transactions --bootstrap-server localhost:9092

Key Highlights:

Kafka Streaming:
Consumes real-time data from a transactions topic in Kafka


Batch Processing:
Buffers incoming messages into batches of 100 before processing


Incremental Learning:
Uses SGDClassifier.partial_fit to update the model incrementally with each batch.


Scalability:
The code can be scaled with larger Kafka clusters or extended with Spark Streaming.
